{"version":3,"sources":["images/bg-desktop-dark.jpg","images/bg-desktop-light.jpg","images/icon-moon.svg","images/icon-sun.svg","contexts/ThemeContext.js","components/BackgroundImage.js","components/Container.js","images/icon-cross.svg","contexts/TodoContext.js","components/TodoItem.js","components/TodoForm.js","components/FilterTodo.js","components/Footer.js","components/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","children","useState","isDarkTheme","dark","BackgroundDark","IconSun","light","BackgroundLight","IconMoon","theme","setTheme","themeContextData","toggleTheme","Provider","value","BackgroundImage","useContext","style","className","backgroundImage","Container","backgroundColor","TodoContext","TodoContextProvider","JSON","parse","localStorage","getItem","id","v4","title","isCompleted","todos","setTodos","filterTodos","setFilterTodos","completedTodo","setCompletedTodo","activeTodo","setActiveTodo","todoContextData","addTodo","todo","prev","newTodo","jsonTodo","stringify","setItem","deleteTodo","filter","checkCompleted","map","deleteCompleted","completedFilter","activeFilter","allFilter","TodoItem","data","item","borderBottom","borderBottomItem","type","checked","onChange","htmlFor","color","titleColorCompleted","childrenColor","src","IconCross","alt","onClick","TodoForm","setTitle","backgroundChildren","placeholder","e","target","onKeyDown","key","alert","handleAdd","FilterTodo","isActive","buttonArray","buttonState","setButtonState","itemLeft","setItemLeft","useEffect","length","toggleActiveStyle","filterColor","button","index","clearCompletedStyle","Footer","href","TodoApp","setData","iconToggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea771eae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","import React, { createContext, useState } from \"react\";\r\nimport BackgroundDark from '../images/bg-desktop-dark.jpg'\r\nimport BackgroundLight from '../images/bg-desktop-light.jpg'\r\nimport IconMoon from '../images/icon-moon.svg'\r\nimport IconSun from '../images/icon-sun.svg'\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = ({children}) => {\r\n     const [theme, setTheme] = useState({\r\n          isDarkTheme: true,\r\n          dark: {\r\n               \"backgroundImage\": `url(${BackgroundDark})`,\r\n               \"backgroundColor\" : 'hsl(235, 21%, 11%)',\r\n               \"backgroundChildren\" : \"hsl(235, 24%, 19%)\",\r\n               \"childrenColor\": \"hsl(234, 39%, 85%)\",\r\n               \"titleColorCompleted\" : \"#65677c\",\r\n               \"borderBottomItem\" : \"#35374c\",\r\n               \"iconToggle\" : `${IconSun}`,\r\n               \"filterColor\": \"#65677c\",\r\n          },\r\n          light: {\r\n               \"backgroundImage\": `url(${BackgroundLight})`,\r\n               \"backgroundColor\" : 'hsl(0, 0%, 98%)',\r\n               \"backgroundChildren\" : \"white\",\r\n               \"titleColorCompleted\" : \"#cccbd1\",\r\n               \"childrenColor\" : \"#51505e\",\r\n               \"borderBottomItem\" : \"#efeff1\",\r\n               \"iconToggle\" : `${IconMoon}`,\r\n               \"filterColor\": \"#cccbd1\",\r\n          }\r\n     })\r\n     const toggleTheme = () => {\r\n          setTheme({\r\n               ...theme,\r\n               isDarkTheme: !theme.isDarkTheme\r\n          })\r\n     }\r\n     const themeContextData = {\r\n          theme: theme,\r\n          toggleTheme\r\n     }\r\n     return (\r\n          <ThemeContext.Provider value={themeContextData}>\r\n               {children}\r\n          </ThemeContext.Provider>\r\n     )\r\n}\r\n\r\nexport default ThemeContextProvider","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nexport default function BackgroundImage() {\r\n     const {theme} = useContext(ThemeContext)\r\n     const {isDarkTheme ,light, dark} = theme\r\n     const style = isDarkTheme ? dark : light\r\n  return (\r\n    <div className=\"background\" style={{backgroundImage: style.backgroundImage}}>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nexport default function Container({children}) {\r\n     const {theme} = useContext(ThemeContext)\r\n     const {isDarkTheme ,light, dark} = theme\r\n     const style = isDarkTheme ? dark : light\r\n  return (\r\n    <div className=\"container\" style={{backgroundColor: style.backgroundColor}}>\r\n         {children}\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import React, {useState, createContext} from \"react\";\r\nimport { v4 } from 'uuid';\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = ({children}) => {\r\n     const [todos, setTodos] = useState(() => {\r\n          const storage = JSON.parse(localStorage.getItem('jobs')) === null\r\n          ? \r\n               [\r\n                    {id: v4(), title:\"HappyCoding\", isCompleted: true},\r\n                    {id: v4(), title:\"ThanhVuong\", isCompleted: false}\r\n               ]\r\n          :\r\n          JSON.parse(localStorage.getItem('jobs'))\r\n          return storage\r\n     })\r\n     const [filterTodos, setFilterTodos] = useState(\"All\")\r\n     const [completedTodo, setCompletedTodo] = useState([])\r\n     const [activeTodo, setActiveTodo] = useState([])\r\n\r\n     const addTodo = (todo) => {\r\n          // setTodos([...todos, todo]) Don't use Local Stogare\r\n          //Use Local Storage\r\n          setTodos(prev => {\r\n               const newTodo = [...prev, todo]\r\n               //Save Local Storage\r\n               const jsonTodo = JSON.stringify(newTodo)\r\n               localStorage.setItem(\"jobs\", jsonTodo)\r\n               return newTodo\r\n          })\r\n     }\r\n     const deleteTodo = (id) => {\r\n          // setTodos(() => todos.filter(todo => todo.id !== id))\r\n          setTodos(prev => {\r\n               const newTodo = prev.filter(todo => todo.id !== id)\r\n               const jsonTodo = JSON.stringify(newTodo)\r\n               localStorage.setItem(\"jobs\", jsonTodo)\r\n               return newTodo\r\n          })\r\n     }\r\n     const checkCompleted = (id) => {\r\n          // setTodos(todos.map(todo => todo.id === id ? {...todo, isCompleted: !todo.isCompleted} : todo))\r\n          setTodos(prev => {\r\n               const newTodo = prev.map(todo => todo.id === id ? {...todo, isCompleted: !todo.isCompleted} : todo)\r\n               const jsonTodo = JSON.stringify(newTodo)\r\n               localStorage.setItem(\"jobs\", jsonTodo)\r\n               return newTodo\r\n          })\r\n     }\r\n     const deleteCompleted = () => {\r\n          // setTodos(todos.filter(todo => todo.isCompleted !== true))\r\n          setTodos(prev => {\r\n               const newTodo = prev.filter(todo => todo.isCompleted !== true)\r\n               const jsonTodo = JSON.stringify(newTodo)\r\n               localStorage.setItem(\"jobs\", jsonTodo)\r\n               return newTodo\r\n          })\r\n     }\r\n     \r\n     const completedFilter = () => {\r\n          setFilterTodos(\"Completed\")\r\n          setCompletedTodo(todos.filter(todo => todo.isCompleted === true))\r\n     }\r\n\r\n     const activeFilter = () => {\r\n          setFilterTodos(\"Active\")\r\n          setActiveTodo(todos.filter(todo => todo.isCompleted === false))\r\n     }\r\n\r\n     const allFilter = () => {\r\n          setFilterTodos(\"All\")\r\n     }\r\n     \r\n     const todoContextData = {\r\n          todos,\r\n          filterTodos,\r\n          completedTodo,\r\n          activeTodo,\r\n          addTodo,\r\n          deleteTodo,\r\n          checkCompleted,\r\n          deleteCompleted,\r\n          completedFilter,\r\n          activeFilter,\r\n          allFilter,\r\n     }\r\n     return (\r\n          <TodoContext.Provider value={todoContextData}>\r\n               {children}\r\n          </TodoContext.Provider>\r\n     )\r\n}\r\nexport default TodoContextProvider","import React, { useContext } from 'react'\r\nimport IconCross from '../images/icon-cross.svg'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\nexport default function TodoItem({data}) {\r\n     const { deleteTodo , checkCompleted } = useContext(TodoContext)\r\n     const { theme } = useContext(ThemeContext)\r\n     const { isDarkTheme ,light, dark } = theme\r\n     const style = isDarkTheme ? dark : light\r\n  return (\r\n     data.map(item => {\r\n         return (\r\n          <div className=\"todo-item\" key={item.id} style={{borderBottom: `1px solid ${style.borderBottomItem}`}}>\r\n               <div className=\"borderGroup\">\r\n                    <input \r\n                         id={item.id} \r\n                         type=\"checkbox\" \r\n                         checked={item.isCompleted}\r\n                         onChange={() => checkCompleted(item.id)}\r\n                    />\r\n                    <label htmlFor={item.id}></label>\r\n               </div>\r\n               {\r\n                    item.isCompleted ?\r\n                    <p className=\"todo-item-title title-completed\" style={{color : style.titleColorCompleted}}>\r\n                         {item.title}\r\n                    </p>\r\n                    :\r\n                    <p className=\"todo-item-title\" style={{color: style.childrenColor}}>\r\n                         {item.title}\r\n                    </p>\r\n               }\r\n               <img src={IconCross} alt=\"x\" onClick={()=>deleteTodo(item.id)} className=\"icon-cross\"/>\r\n          </div>\r\n         )\r\n    })\r\n  )\r\n}\r\n","import React, {useContext, useState} from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\nimport { v4 } from 'uuid';\r\nexport default function TodoForm() {\r\n     const {theme} = useContext(ThemeContext)\r\n     const {isDarkTheme ,light, dark} = theme\r\n     const style = isDarkTheme ? dark : light\r\n\r\n     const [title, setTitle] = useState('')\r\n     const {addTodo} = useContext(TodoContext)\r\n     const handleAdd = (e) => {\r\n          if(e.key === \"Enter\") {\r\n               if(title) {\r\n                    addTodo({id: v4(), title: title, isCompleted: false})\r\n                    setTitle('')\r\n               }\r\n               else {\r\n                    alert(\"Opps\")\r\n               }\r\n          }\r\n     }\r\n  return (\r\n     <div className=\"todo-form\" style={{backgroundColor: style.backgroundChildren}}>\r\n          <span className=\"border\">\r\n          </span>\r\n          <input \r\n               type=\"text\" \r\n               id=\"todo-input\" \r\n               placeholder=\"Create a new todo...\"\r\n               value={title}\r\n               onChange={(e)=> setTitle(e.target.value)}\r\n               onKeyDown={(e) => handleAdd(e)}\r\n               style={{color: style.childrenColor}}\r\n          />\r\n     </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { TodoContext } from '../contexts/TodoContext'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\nexport default function FilterTodo() {\r\n\t//Context\r\n\tconst { todos, deleteCompleted, completedFilter, activeFilter, allFilter } = useContext(TodoContext)\r\n\tconst { theme } = useContext(ThemeContext)\r\n\tconst { isDarkTheme ,light, dark } = theme\r\n\tconst style = isDarkTheme ? dark : light\r\n\t\r\n\t//Button\r\n\tconst [buttonState, setButtonState] = useState({\r\n\t\tisActive: \"All\",\r\n\t\tbuttonArray: [\r\n\t\t\t{title : \"All\"},\r\n\t\t\t{title : \"Active\"},\r\n\t\t\t{title : \"Completed\"}\r\n\t\t]\r\n\t})\r\n\t//Item Left\r\n\tconst [itemLeft, setItemLeft] = useState(0)\r\n\tuseEffect(() => {\r\n\t\tsetItemLeft(todos.length)\r\n\t}, [todos])\r\n\t//Filter\r\n\tconst handleFilter = (title) => {\r\n\t\tif(title === \"All\") {\r\n\t\t\tallFilter()\r\n\t\t}\r\n\t\tif(title === \"Active\") {\r\n\t\t\tactiveFilter()\r\n\t\t}\r\n\t\tif(title === \"Completed\") {\r\n\t\t\tcompletedFilter()\r\n\t\t}\r\n\t\tsetButtonState({...buttonState, isActive: title})\r\n\t}\r\n\t//Add class active and hover\r\n\tconst toggleActiveStyle = (title) => {\r\n\t\tlet className=\"\"\r\n\t\tif(isDarkTheme === true) {\r\n\t\t\tclassName= \"dark\"\r\n\t\t\tif(buttonState.isActive === title) {\r\n\t\t\t\tclassName = \"active\"\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(isDarkTheme === false) {\r\n\t\t\tclassName= \"light\"\r\n\t\t\tif(buttonState.isActive === title) {\r\n\t\t\t\tclassName = \"active\"\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn className\r\n\t}\r\n\t//Hover style Clear Completed Button\r\n\tconst clearCompletedStyle = () => {\r\n\t\tlet className=\"\"\r\n\t\tif(isDarkTheme === true) {\r\n\t\t\tclassName= \"dark\"\r\n\t\t}\r\n\t\tif(isDarkTheme === false) {\r\n\t\t\tclassName= \"light\"\r\n\t\t}\r\n\t\treturn className\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"filter\" >\r\n\t\t\t<p style={{color: style.filterColor}}>{ itemLeft } item left</p>\r\n\t\t\t<div className=\"status\" style={{backgroundColor: style.backgroundChildren}}>\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonState.buttonArray.map((button, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\t\tstyle={{color: style.filterColor}}\r\n\t\t\t\t\t\t\t\tclassName={ toggleActiveStyle(button.title) }\r\n\t\t\t\t\t\t\t\tonClick={ () => handleFilter(button.title) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{button.title}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<button \r\n\t\t\t\tstyle={{color: style.filterColor}} \r\n\t\t\t\tonClick={ () => deleteCompleted() }\r\n\t\t\t\tclassName={ clearCompletedStyle() }\r\n\t\t\t>\r\n\t\t\t\t\tClear Completed\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\nexport default function Footer() {\r\n     const { theme } = useContext(ThemeContext)\r\n     const { isDarkTheme ,light, dark } = theme\r\n     const style = isDarkTheme ? dark : light\r\n  return (\r\n     <div className=\"footer\">\r\n          <p style={{color: style.titleColorCompleted}}>Drag and drop to reorder list</p>\r\n          <div className=\"attribution\" style={{color: style.childrenColor}}>\r\n               Challenge by \r\n               <a href=\"https://www.frontendmentor.io?ref=challenge\"> Frontend Mentor</a>. \r\n               Coded by <a href=\"https://www.facebook.com/thanhvgg/\">Thanh Vuong</a>.\r\n          </div>\r\n     </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport TodoForm from './TodoForm';\r\nimport FilterTodo from './FilterTodo';\r\nimport Footer from './Footer';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport { ThemeContext } from '../contexts/ThemeContext'\r\n\r\nexport default function TodoApp() {\r\n     const { theme } = useContext(ThemeContext)\r\n     const { toggleTheme } = useContext(ThemeContext)\r\n     const { isDarkTheme ,light, dark } = theme\r\n     const style = isDarkTheme ? dark : light\r\n    \r\n     const { todos, filterTodos, completedTodo, activeTodo } = useContext(TodoContext)\r\n     const [data, setData] = useState(todos)\r\n     useEffect(() => {\r\n          if(filterTodos === \"All\") {\r\n               setData(todos)\r\n          }\r\n          if(filterTodos === \"Completed\") {\r\n               setData(completedTodo)\r\n          }\r\n          if(filterTodos === \"Active\") {\r\n               setData(activeTodo)\r\n          }\r\n     }, [todos, filterTodos, completedTodo, activeTodo])\r\n  return (\r\n    <div className=\"todo-app\">\r\n          <div className=\"todo-top\">\r\n               <h1 className=\"todo-heading\">TODO</h1>\r\n               <img src={style.iconToggle} alt=\"icon\" onClick={toggleTheme} className=\"todo-toggle\"/>\r\n          </div>\r\n          <TodoForm />\r\n          <div className=\"todo-list\" style={{ backgroundColor: style.backgroundChildren }}>\r\n               <TodoItem data = { data } />\r\n               <FilterTodo />\r\n          </div>\r\n          <Footer></Footer>\r\n    </div>\r\n  )\r\n}","import ThemeContextProvider from \"./contexts/ThemeContext\";\nimport BackgroundImage from \"./components/BackgroundImage\";\nimport Container from \"./components/Container\";\nimport TodoApp from \"./components/TodoApp\";\nimport TodoContextProvider from \"./contexts/TodoContext\";\n\nfunction App() {\n  return (\n    <ThemeContextProvider>\n      <Container>\n        <BackgroundImage/> \n        <TodoContextProvider>\n          <TodoApp />\n        </TodoContextProvider>\n      </Container>\n    </ThemeContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}